product_spec_northstar: >
  ### Objective:
  You are given full Quran text in {project_root}\data\quran-uthmani-min.txt file. Find secret messages and codes in Quran using novel strategies that haven't been explored before. 
  You have to come up with novel strategies to do full Quran analysis on arabic text. Surpass the limits of what humans can do in analyzing Quran text to look for clues for hidden messages and codes.

  ### Text Processing Requirements:
  
  * Data Source:
  Use only the following file as source of truth and do NOT modify it:
  {project_root}\data\quran-uthmani-min.txt file
  Each line contains: Surah|Ayah|Verse Text
  Example:
  1|1|بِسمِ اللَّهِ الرَّحمٰنِ الرَّحيمِ
  1|2|الحَمدُ لِلَّهِ رَبِّ العٰلَمينَ
  1|3|الرَّحمٰنِ الرَّحيمِ
  
  * Preprocessing:
  Normalize Arabic text before analysis:
  Remove diacritics
  Normalize Arabic letters (e.g., ى → ي, ة → ه, etc.)
  Handle invisible Unicode artifacts
  Arabic has no concept of case sensitivity

  * Tools:
  You can use any python library that will help you. Examples: CAMeL Tools and Arabic lemmatizers and root analyzers  

  ### Program Structure & Expectations:

  * Main Function:
  Fully complete function that executes all the analysis and creates a log file that contains analysis and results.
  Should not be a demo or placeholder.
  Must perform a complete and verbose Quran analysis.
  Must produce analysis steps and result's output in the log file for every analytical stage. The log file should be self sufficient and can be used seperately for independent analysis by AI systems.

  * Testing:
  Create an integration test to run the full main() function

  * Final Goal:
  Find secret messages and codes in Quran using novel strategies that haven't been explored before. 
  You have to come up with novel strategies to do full Quran analysis on arabic text. Surpass the limits of what humans can do in analyzing Quran text to look for clues for hidden messages and codes.

project_root_folder: C:\Github\secrets_of_quran
product_spec_history_filename: product_spec_history.json
architecture_spec_history_filename: architecture_spec_history.json
codebase_metadata_filename: codebase_metadata.json
total_runs_to_build_northstar: 30
max_test_attempts_per_iteration: 5
programming_languages:
  - python
development_os: "Windows 11"
run_tests: True
auto_commit: True
auto_revert: True
use_local_llm: False


