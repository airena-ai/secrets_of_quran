product_spec_northstar: >
  ### Objective:
  Develop a comprehensive Python application called Quran Secrets to discover deep, potentially hidden patterns, numerical codes, and linguistic structures in the Quran. The goal is to search for ultimate secrets — from known codes like 19-based patterns to yet-undiscovered anomalies.

  ### Phase-Based Development Plan:
  
  * Start Simple:
  Begin by analyzing frequencies of Arabic words, word groups, verses, and surahs using the given Quran text.
  
  * Expand Gradually:
  As the project evolves, implement more advanced and innovative search techniques:
  Root word and lemma analysis
  Repeating patterns
  Palindromic structures
  Mathematical phenomena
  Semantic symmetry
  Rhythmic or structural balance in verse arrangements
  Anything “unthinkable” that could hint at a secret code or structure
  
  * No Restrictions on Creativity:
  There are no limits on what kind of secret or analysis technique you can try. Treat this as an open-ended, research-oriented mission.

  ### Text Processing Requirements:
  
  * Data Source:
  Use only the following file (do NOT modify it):
  {project_root}/data/quran-uthmani-min.txt
  Each line contains: Surah|Ayah|Verse Text
  Example:
  1|1|بِسمِ اللَّهِ الرَّحمٰنِ الرَّحيمِ
  1|2|الحَمدُ لِلَّهِ رَبِّ العٰلَمينَ
  1|3|الرَّحمٰنِ الرَّحيمِ
  
  * Preprocessing:
  Normalize Arabic text before analysis:
  Remove diacritics
  Normalize Arabic letters (e.g., ى → ي, ة → ه, etc.)
  Handle invisible Unicode artifacts
  Arabic has no concept of case sensitivity

  * Linguistic Tools:
  Integrate advanced Arabic language processing tools:
  CAMeL Tools
  Arabic lemmatizers and root analyzers  

  ### Program Structure & Expectations:

  * Main Function:
  Acts as the central driver of all analyses.
  Should not be a demo or placeholder.
  Must perform a complete and verbose Quran-wide analysis.
  Must produce meaningful output for every analytical stage.

  * Logging and Output:
  Log all results to a structured file (e.g., results.log)
  Any interesting findings should be explicitly tagged with:
  POTENTIAL SECRET FOUND: [short description]

  * Testing:
  Create an integration test to run the full main() function
  No mocks or partial runs — test the full analyzer as a real-world application

  * Final Goal:
  Build the ultimate Quran Analyzer, pushing the boundaries of pattern discovery, linguistic depth, and computational creativity.

project_root_folder: C:\Github\secrets_of_quran
product_spec_history_filename: product_spec_history.json
architecture_spec_history_filename: architecture_spec_history.json
codebase_metadata_filename: codebase_metadata.json
total_runs_to_build_northstar: 1
max_test_attempts_per_iteration: 5
programming_languages:
  - python
development_os: "Windows 11"
run_tests: True
auto_commit: True
auto_revert: False
use_local_llm: False


